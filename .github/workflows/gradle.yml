# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        env:
          env.DB_URL: ${{secrets.DB_URL}}
          env.DB_USERNAME: ${{secrets.DB_USERNAME}}
          env.DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          env.REDIS_HOST: ${{secrets.REDIS_HOST}}
          env.REDIS_PORT: ${{secrets.REDIS_PORT}}
          env.S3_ACCESS: ${{secrets.S3_ACCESS}}
          env.S3_SECRET: ${{secrets.S3_SECRET}}
          env.S3_BUCKET: ${{secrets.S3_BUCKET}}
          env.S3_REGION: ${{secrets.S3_REGION}}
          env.S3_STACK_AUTO: ${{secrets.S3_STACK_AUTO}}
          env.JWT_ISSUER: ${{secrets.JWT_ISSUER}}
          env.JWT_SECRET: ${{secrets.JWT_SECRET}}
          env.JWT_ACCESS_EXPIRATION: ${{secrets.JWT_ACCESS_EXPIRATION}}
          env.JWT_REFRESH_EXPIRATION: ${{secrets.JWT_REFRESH_EXPIRATION}}
          env.MAX_FILE: ${{secrets.MAX_FILE}}
          env.MAX_REQUEST: ${{secrets.MAX_REQUEST}}
        run: ./gradlew clean build -x test

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/
        
      # appspec.yml Copy
      - name: Copy appspec
        run: cp appspec.yml start.sh ./deploy/


      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./build.zip ./deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws s3 cp --region ap-northeast-2 ./build.zip s3://amattang-bucket/server/build.zip
        
      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:
          aws deploy create-deployment --application-name Amattang-deploy --deployment-group-name Github-Actions-Group --file-exists-behavior OVERWRITE --s3-location bucket=amattang-bucket,bundleType=zip,key=server/build.zip --region ap-northeast-2
